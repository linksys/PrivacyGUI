// Mocks generated by Mockito 5.4.4 from annotations
// in privacy_gui/test/mocks/mockito_specs/gelocation_notifier_spec.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_riverpod/flutter_riverpod.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:privacy_gui/core/cloud/providers/geolocation/geolocation_provider.dart'
    as _i4;
import 'package:privacy_gui/core/cloud/providers/geolocation/geolocation_state.dart'
    as _i3;
import 'package:privacy_gui/core/jnap/providers/device_manager_state.dart'
    as _i6;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAsyncNotifierProviderRef_0<T> extends _i1.SmartFake
    implements _i2.AsyncNotifierProviderRef<T> {
  _FakeAsyncNotifierProviderRef_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAsyncValue_1<T> extends _i1.SmartFake implements _i2.AsyncValue<T> {
  _FakeAsyncValue_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeGeolocationState_2 extends _i1.SmartFake
    implements _i3.GeolocationState {
  _FakeGeolocationState_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [GeolocationNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockGeolocationNotifier extends _i2.AsyncNotifier<_i3.GeolocationState> with _i1.Mock
    implements _i4.GeolocationNotifier {
  @override
  _i2.AsyncNotifierProviderRef<_i3.GeolocationState> get ref =>
      (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeAsyncNotifierProviderRef_0<_i3.GeolocationState>(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub:
            _FakeAsyncNotifierProviderRef_0<_i3.GeolocationState>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i2.AsyncNotifierProviderRef<_i3.GeolocationState>);

  @override
  _i2.AsyncValue<_i3.GeolocationState> get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeAsyncValue_1<_i3.GeolocationState>(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeAsyncValue_1<_i3.GeolocationState>(
          this,
          Invocation.getter(#state),
        ),
      ) as _i2.AsyncValue<_i3.GeolocationState>);

  @override
  set state(_i2.AsyncValue<_i3.GeolocationState>? newState) =>
      super.noSuchMethod(
        Invocation.setter(
          #state,
          newState,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<_i3.GeolocationState> get future => (super.noSuchMethod(
        Invocation.getter(#future),
        returnValue:
            _i5.Future<_i3.GeolocationState>.value(_FakeGeolocationState_2(
          this,
          Invocation.getter(#future),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.GeolocationState>.value(_FakeGeolocationState_2(
          this,
          Invocation.getter(#future),
        )),
      ) as _i5.Future<_i3.GeolocationState>);

  @override
  _i5.Future<_i3.GeolocationState> build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue:
            _i5.Future<_i3.GeolocationState>.value(_FakeGeolocationState_2(
          this,
          Invocation.method(
            #build,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.GeolocationState>.value(_FakeGeolocationState_2(
          this,
          Invocation.method(
            #build,
            [],
          ),
        )),
      ) as _i5.Future<_i3.GeolocationState>);

  @override
  _i5.Future<_i3.GeolocationState> fetch(_i6.LinksysDevice? master) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [master],
        ),
        returnValue:
            _i5.Future<_i3.GeolocationState>.value(_FakeGeolocationState_2(
          this,
          Invocation.method(
            #fetch,
            [master],
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.GeolocationState>.value(_FakeGeolocationState_2(
          this,
          Invocation.method(
            #fetch,
            [master],
          ),
        )),
      ) as _i5.Future<_i3.GeolocationState>);

  @override
  _i5.Future<_i3.GeolocationState> update(
    _i5.FutureOr<_i3.GeolocationState> Function(_i3.GeolocationState)? cb, {
    _i5.FutureOr<_i3.GeolocationState> Function(
      Object,
      StackTrace,
    )? onError,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #update,
          [cb],
          {#onError: onError},
        ),
        returnValue:
            _i5.Future<_i3.GeolocationState>.value(_FakeGeolocationState_2(
          this,
          Invocation.method(
            #update,
            [cb],
            {#onError: onError},
          ),
        )),
        returnValueForMissingStub:
            _i5.Future<_i3.GeolocationState>.value(_FakeGeolocationState_2(
          this,
          Invocation.method(
            #update,
            [cb],
            {#onError: onError},
          ),
        )),
      ) as _i5.Future<_i3.GeolocationState>);

  @override
  bool updateShouldNotify(
    _i2.AsyncValue<_i3.GeolocationState>? previous,
    _i2.AsyncValue<_i3.GeolocationState>? next,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            previous,
            next,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
