// Mocks generated by Mockito 5.4.4 from annotations
// in privacy_gui/test/page/nodes/views/localizations/add_nodes_view_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_riverpod/flutter_riverpod.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:privacy_gui/core/jnap/models/device.dart' as _i7;
import 'package:privacy_gui/core/jnap/result/jnap_result.dart' as _i6;
import 'package:privacy_gui/page/nodes/providers/add_nodes_provider.dart'
    as _i4;
import 'package:privacy_gui/page/nodes/providers/add_nodes_state.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAutoDisposeNotifierProviderRef_0<T> extends _i1.SmartFake
    implements _i2.AutoDisposeNotifierProviderRef<T> {
  _FakeAutoDisposeNotifierProviderRef_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddNodesState_1 extends _i1.SmartFake implements _i3.AddNodesState {
  _FakeAddNodesState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AddNodesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddNodesNotifier extends _i2.AutoDisposeNotifier<_i3.AddNodesState> with _i1.Mock implements _i4.AddNodesNotifier {
  @override
  _i2.AutoDisposeNotifierProviderRef<_i3.AddNodesState> get ref =>
      (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeAutoDisposeNotifierProviderRef_0<_i3.AddNodesState>(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub:
            _FakeAutoDisposeNotifierProviderRef_0<_i3.AddNodesState>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i2.AutoDisposeNotifierProviderRef<_i3.AddNodesState>);

  @override
  _i3.AddNodesState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeAddNodesState_1(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeAddNodesState_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.AddNodesState);

  @override
  set state(_i3.AddNodesState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.AddNodesState build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue: _FakeAddNodesState_1(
          this,
          Invocation.method(
            #build,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAddNodesState_1(
          this,
          Invocation.method(
            #build,
            [],
          ),
        ),
      ) as _i3.AddNodesState);

  @override
  _i5.Future<void> setAutoOnboardingSettings() => (super.noSuchMethod(
        Invocation.method(
          #setAutoOnboardingSettings,
          [],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> getAutoOnboardingSettings() => (super.noSuchMethod(
        Invocation.method(
          #getAutoOnboardingSettings,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Stream<_i6.JNAPResult> pollAutoOnboardingStatus(
          {bool? oneTake = false}) =>
      (super.noSuchMethod(
        Invocation.method(
          #pollAutoOnboardingStatus,
          [],
          {#oneTake: oneTake},
        ),
        returnValue: _i5.Stream<_i6.JNAPResult>.empty(),
        returnValueForMissingStub: _i5.Stream<_i6.JNAPResult>.empty(),
      ) as _i5.Stream<_i6.JNAPResult>);

  @override
  _i5.Future<dynamic> startAutoOnboarding() => (super.noSuchMethod(
        Invocation.method(
          #startAutoOnboarding,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Stream<List<_i7.RawDevice>> pollForNodesOnline(
    List<String>? onboardedMACList,
    {bool refreshing = false}
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #pollForNodesOnline,
          [
            onboardedMACList,
            refreshing,
          ],
        ),
        returnValue: _i5.Stream<List<_i7.RawDevice>>.empty(),
        returnValueForMissingStub: _i5.Stream<List<_i7.RawDevice>>.empty(),
      ) as _i5.Stream<List<_i7.RawDevice>>);

  @override
  bool updateShouldNotify(
    _i3.AddNodesState? previous,
    _i3.AddNodesState? next,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            previous,
            next,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
