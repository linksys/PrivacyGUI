// Mocks generated by Mockito 5.4.5 from annotations
// in privacy_gui/test/mocks/mockito_specs/ddns_notifier_spec%20copy.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_riverpod/flutter_riverpod.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:privacy_gui/page/advanced_settings/apps_and_gaming/providers/apps_and_gaming_provider.dart'
    as _i4;
import 'package:privacy_gui/page/advanced_settings/apps_and_gaming/providers/apps_and_gaming_state.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNotifierProviderRef_0<T> extends _i1.SmartFake
    implements _i2.NotifierProviderRef<T> {
  _FakeNotifierProviderRef_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeAppsAndGamingViewState_1 extends _i1.SmartFake
    implements _i3.AppsAndGamingViewState {
  _FakeAppsAndGamingViewState_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [AppsAndGamingViewNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppsAndGamingViewNotifier
    extends _i2.Notifier<_i3.AppsAndGamingViewState>
    with _i1.Mock
    implements _i4.AppsAndGamingViewNotifier {
  @override
  _i2.NotifierProviderRef<_i3.AppsAndGamingViewState> get ref =>
      (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeNotifierProviderRef_0<_i3.AppsAndGamingViewState>(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub:
            _FakeNotifierProviderRef_0<_i3.AppsAndGamingViewState>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i2.NotifierProviderRef<_i3.AppsAndGamingViewState>);

  @override
  _i3.AppsAndGamingViewState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeAppsAndGamingViewState_1(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeAppsAndGamingViewState_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.AppsAndGamingViewState);

  @override
  set state(_i3.AppsAndGamingViewState? value) => super.noSuchMethod(
        Invocation.setter(#state, value),
        returnValueForMissingStub: null,
      );

  @override
  _i3.AppsAndGamingViewState build() => (super.noSuchMethod(
        Invocation.method(#build, []),
        returnValue: _FakeAppsAndGamingViewState_1(
          this,
          Invocation.method(#build, []),
        ),
        returnValueForMissingStub: _FakeAppsAndGamingViewState_1(
          this,
          Invocation.method(#build, []),
        ),
      ) as _i3.AppsAndGamingViewState);

  @override
  _i5.Future<_i3.AppsAndGamingViewState> fetch([bool? force = false]) =>
      (super.noSuchMethod(
        Invocation.method(#fetch, [force]),
        returnValue: _i5.Future<_i3.AppsAndGamingViewState>.value(
          _FakeAppsAndGamingViewState_1(
            this,
            Invocation.method(#fetch, [force]),
          ),
        ),
        returnValueForMissingStub: _i5.Future<_i3.AppsAndGamingViewState>.value(
          _FakeAppsAndGamingViewState_1(
            this,
            Invocation.method(#fetch, [force]),
          ),
        ),
      ) as _i5.Future<_i3.AppsAndGamingViewState>);

  @override
  _i5.Future<_i3.AppsAndGamingViewState> save() => (super.noSuchMethod(
        Invocation.method(#save, []),
        returnValue: _i5.Future<_i3.AppsAndGamingViewState>.value(
          _FakeAppsAndGamingViewState_1(this, Invocation.method(#save, [])),
        ),
        returnValueForMissingStub: _i5.Future<_i3.AppsAndGamingViewState>.value(
          _FakeAppsAndGamingViewState_1(
            this,
            Invocation.method(#save, []),
          ),
        ),
      ) as _i5.Future<_i3.AppsAndGamingViewState>);

  @override
  bool isChanged() => (super.noSuchMethod(
        Invocation.method(#isChanged, []),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  bool isDataValid() => (super.noSuchMethod(
        Invocation.method(#isDataValid, []),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);

  @override
  void listenSelf(
    void Function(_i3.AppsAndGamingViewState?, _i3.AppsAndGamingViewState)?
        listener, {
    void Function(Object, StackTrace)? onError,
  }) =>
      super.noSuchMethod(
        Invocation.method(#listenSelf, [listener], {#onError: onError}),
        returnValueForMissingStub: null,
      );

  @override
  bool updateShouldNotify(
    _i3.AppsAndGamingViewState? previous,
    _i3.AppsAndGamingViewState? next,
  ) =>
      (super.noSuchMethod(
        Invocation.method(#updateShouldNotify, [previous, next]),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
