// Mocks generated by Mockito 5.4.5 from annotations
// in privacy_gui/test/mocks/mockito_specs/add_wired_nodes_notifier_spec.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter/widgets.dart' as _i6;
import 'package:flutter_riverpod/flutter_riverpod.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:privacy_gui/page/nodes/providers/add_wired_nodes_provider.dart'
    as _i4;
import 'package:privacy_gui/page/nodes/providers/add_wired_nodes_state.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAutoDisposeNotifierProviderRef_0<T> extends _i1.SmartFake
    implements _i2.AutoDisposeNotifierProviderRef<T> {
  _FakeAutoDisposeNotifierProviderRef_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeAddWiredNodesState_1 extends _i1.SmartFake
    implements _i3.AddWiredNodesState {
  _FakeAddWiredNodesState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [AddWiredNodesNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockAddWiredNodesNotifier extends _i2.AutoDisposeNotifier<_i3.AddWiredNodesState> with _i1.Mock
    implements _i4.AddWiredNodesNotifier {
  @override
  _i2.AutoDisposeNotifierProviderRef<_i3.AddWiredNodesState> get ref =>
      (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue:
            _FakeAutoDisposeNotifierProviderRef_0<_i3.AddWiredNodesState>(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub:
            _FakeAutoDisposeNotifierProviderRef_0<_i3.AddWiredNodesState>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i2.AutoDisposeNotifierProviderRef<_i3.AddWiredNodesState>);

  @override
  _i3.AddWiredNodesState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeAddWiredNodesState_1(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeAddWiredNodesState_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.AddWiredNodesState);

  @override
  set state(_i3.AddWiredNodesState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.AddWiredNodesState build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue: _FakeAddWiredNodesState_1(
          this,
          Invocation.method(
            #build,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeAddWiredNodesState_1(
          this,
          Invocation.method(
            #build,
            [],
          ),
        ),
      ) as _i3.AddWiredNodesState);

  @override
  _i5.Future<void> setAutoOnboardingSettings(bool? enabled) =>
      (super.noSuchMethod(
        Invocation.method(
          #setAutoOnboardingSettings,
          [enabled],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);

  @override
  _i5.Future<bool> getAutoOnboardingSettings() => (super.noSuchMethod(
        Invocation.method(
          #getAutoOnboardingSettings,
          [],
        ),
        returnValue: _i5.Future<bool>.value(false),
        returnValueForMissingStub: _i5.Future<bool>.value(false),
      ) as _i5.Future<bool>);

  @override
  _i5.Future<dynamic> startAutoOnboarding(_i6.BuildContext? context) =>
      (super.noSuchMethod(
        Invocation.method(
          #startAutoOnboarding,
          [context],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Stream<dynamic> pollBackhaulInfo(
    _i6.BuildContext? context, [
    bool? refreshing = false,
  ]) =>
      (super.noSuchMethod(
        Invocation.method(
          #pollBackhaulInfo,
          [
            context,
            refreshing,
          ],
        ),
        returnValue: _i5.Stream<dynamic>.empty(),
        returnValueForMissingStub: _i5.Stream<dynamic>.empty(),
      ) as _i5.Stream<dynamic>);

  @override
  void stopCheckingBackhaul(_i6.BuildContext? context) => super.noSuchMethod(
        Invocation.method(
          #stopCheckingBackhaul,
          [context],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i5.Future<dynamic> stopAutoOnboarding() => (super.noSuchMethod(
        Invocation.method(
          #stopAutoOnboarding,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> forceStopAutoOnboarding() => (super.noSuchMethod(
        Invocation.method(
          #forceStopAutoOnboarding,
          [],
        ),
        returnValue: _i5.Future<dynamic>.value(),
        returnValueForMissingStub: _i5.Future<dynamic>.value(),
      ) as _i5.Future<dynamic>);

  @override
  void listenSelf(
    void Function(
      _i3.AddWiredNodesState?,
      _i3.AddWiredNodesState,
    )? listener, {
    void Function(
      Object,
      StackTrace,
    )? onError,
  }) =>
      super.noSuchMethod(
        Invocation.method(
          #listenSelf,
          [listener],
          {#onError: onError},
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool updateShouldNotify(
    _i3.AddWiredNodesState? previous,
    _i3.AddWiredNodesState? next,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            previous,
            next,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
