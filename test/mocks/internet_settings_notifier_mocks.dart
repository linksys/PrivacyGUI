// Mocks generated by Mockito 5.4.5 from annotations
// in privacy_gui/test/mocks/mockito_specs/internet_settings_notifier_spec.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_riverpod/flutter_riverpod.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i7;
import 'package:privacy_gui/core/jnap/actions/better_action.dart' as _i6;
import 'package:privacy_gui/page/advanced_settings/internet_settings/providers/internet_settings_provider.dart'
    as _i4;
import 'package:privacy_gui/page/advanced_settings/internet_settings/providers/internet_settings_state.dart'
    as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNotifierProviderRef_0<T> extends _i1.SmartFake
    implements _i2.NotifierProviderRef<T> {
  _FakeNotifierProviderRef_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeInternetSettingsState_1 extends _i1.SmartFake
    implements _i3.InternetSettingsState {
  _FakeInternetSettingsState_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [InternetSettingsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetSettingsNotifier extends _i2.Notifier<_i3.InternetSettingsState> with _i1.Mock
    implements _i4.InternetSettingsNotifier {
  @override
  _i2.NotifierProviderRef<_i3.InternetSettingsState> get ref =>
      (super.noSuchMethod(
            Invocation.getter(#ref),
            returnValue: _FakeNotifierProviderRef_0<_i3.InternetSettingsState>(
              this,
              Invocation.getter(#ref),
            ),
            returnValueForMissingStub:
                _FakeNotifierProviderRef_0<_i3.InternetSettingsState>(
                  this,
                  Invocation.getter(#ref),
                ),
          )
          as _i2.NotifierProviderRef<_i3.InternetSettingsState>);

  @override
  _i3.InternetSettingsState get state =>
      (super.noSuchMethod(
            Invocation.getter(#state),
            returnValue: _FakeInternetSettingsState_1(
              this,
              Invocation.getter(#state),
            ),
            returnValueForMissingStub: _FakeInternetSettingsState_1(
              this,
              Invocation.getter(#state),
            ),
          )
          as _i3.InternetSettingsState);

  @override
  set state(_i3.InternetSettingsState? value) => super.noSuchMethod(
    Invocation.setter(#state, value),
    returnValueForMissingStub: null,
  );

  @override
  _i3.InternetSettingsState build() =>
      (super.noSuchMethod(
            Invocation.method(#build, []),
            returnValue: _FakeInternetSettingsState_1(
              this,
              Invocation.method(#build, []),
            ),
            returnValueForMissingStub: _FakeInternetSettingsState_1(
              this,
              Invocation.method(#build, []),
            ),
          )
          as _i3.InternetSettingsState);

  @override
  _i5.Future<_i3.InternetSettingsState> fetch({bool? fetchRemote = false}) =>
      (super.noSuchMethod(
            Invocation.method(#fetch, [], {#fetchRemote: fetchRemote}),
            returnValue: _i5.Future<_i3.InternetSettingsState>.value(
              _FakeInternetSettingsState_1(
                this,
                Invocation.method(#fetch, [], {#fetchRemote: fetchRemote}),
              ),
            ),
            returnValueForMissingStub:
                _i5.Future<_i3.InternetSettingsState>.value(
                  _FakeInternetSettingsState_1(
                    this,
                    Invocation.method(#fetch, [], {#fetchRemote: fetchRemote}),
                  ),
                ),
          )
          as _i5.Future<_i3.InternetSettingsState>);

  @override
  _i5.Future<dynamic> saveInternetSettings(
    _i3.InternetSettingsState? newState,
    _i3.InternetSettingsState? originalState,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveInternetSettings, [newState, originalState]),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  List<MapEntry<_i6.JNAPAction, Map<String, dynamic>>> getSaveIpv4Transactions(
    _i3.InternetSettingsState? newState,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getSaveIpv4Transactions, [newState]),
            returnValue: <MapEntry<_i6.JNAPAction, Map<String, dynamic>>>[],
            returnValueForMissingStub:
                <MapEntry<_i6.JNAPAction, Map<String, dynamic>>>[],
          )
          as List<MapEntry<_i6.JNAPAction, Map<String, dynamic>>>);

  @override
  _i5.Future<dynamic> savePnpIpv4(_i3.InternetSettingsState? newState) =>
      (super.noSuchMethod(
            Invocation.method(#savePnpIpv4, [newState]),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  List<MapEntry<_i6.JNAPAction, Map<String, dynamic>>> getSaveIpv6Transactions(
    _i3.InternetSettingsState? newState,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getSaveIpv6Transactions, [newState]),
            returnValue: <MapEntry<_i6.JNAPAction, Map<String, dynamic>>>[],
            returnValueForMissingStub:
                <MapEntry<_i6.JNAPAction, Map<String, dynamic>>>[],
          )
          as List<MapEntry<_i6.JNAPAction, Map<String, dynamic>>>);

  @override
  MapEntry<_i6.JNAPAction, Map<String, dynamic>> getMacAddressCloneTransaction(
    bool? isMACAddressCloneEnabled,
    String? macAddress,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMacAddressCloneTransaction, [
              isMACAddressCloneEnabled,
              macAddress,
            ]),
            returnValue: _i7
                .dummyValue<MapEntry<_i6.JNAPAction, Map<String, dynamic>>>(
                  this,
                  Invocation.method(#getMacAddressCloneTransaction, [
                    isMACAddressCloneEnabled,
                    macAddress,
                  ]),
                ),
            returnValueForMissingStub: _i7
                .dummyValue<MapEntry<_i6.JNAPAction, Map<String, dynamic>>>(
                  this,
                  Invocation.method(#getMacAddressCloneTransaction, [
                    isMACAddressCloneEnabled,
                    macAddress,
                  ]),
                ),
          )
          as MapEntry<_i6.JNAPAction, Map<String, dynamic>>);

  @override
  _i5.Future<String?> getMyMACAddress() =>
      (super.noSuchMethod(
            Invocation.method(#getMyMACAddress, []),
            returnValue: _i5.Future<String?>.value(),
            returnValueForMissingStub: _i5.Future<String?>.value(),
          )
          as _i5.Future<String?>);

  @override
  _i5.Future<dynamic> renewDHCPWANLease() =>
      (super.noSuchMethod(
            Invocation.method(#renewDHCPWANLease, []),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  _i5.Future<dynamic> renewDHCPIPv6WANLease() =>
      (super.noSuchMethod(
            Invocation.method(#renewDHCPIPv6WANLease, []),
            returnValue: _i5.Future<dynamic>.value(),
            returnValueForMissingStub: _i5.Future<dynamic>.value(),
          )
          as _i5.Future<dynamic>);

  @override
  void updateState(_i3.InternetSettingsState? newState) => super.noSuchMethod(
    Invocation.method(#updateState, [newState]),
    returnValueForMissingStub: null,
  );

  @override
  void updateMtu(int? mtu) => super.noSuchMethod(
    Invocation.method(#updateMtu, [mtu]),
    returnValueForMissingStub: null,
  );

  @override
  void updateMacAddressCloneEnable(bool? enable) => super.noSuchMethod(
    Invocation.method(#updateMacAddressCloneEnable, [enable]),
    returnValueForMissingStub: null,
  );

  @override
  void updateMacAddressClone(String? macAddress) => super.noSuchMethod(
    Invocation.method(#updateMacAddressClone, [macAddress]),
    returnValueForMissingStub: null,
  );

  @override
  void updateIpv4Settings(_i3.Ipv4Setting? ipv4Setting) => super.noSuchMethod(
    Invocation.method(#updateIpv4Settings, [ipv4Setting]),
    returnValueForMissingStub: null,
  );

  @override
  void updateIpv6Settings(_i3.Ipv6Setting? ipv6Setting) => super.noSuchMethod(
    Invocation.method(#updateIpv6Settings, [ipv6Setting]),
    returnValueForMissingStub: null,
  );

  @override
  void listenSelf(
    void Function(_i3.InternetSettingsState?, _i3.InternetSettingsState)?
    listener, {
    void Function(Object, StackTrace)? onError,
  }) => super.noSuchMethod(
    Invocation.method(#listenSelf, [listener], {#onError: onError}),
    returnValueForMissingStub: null,
  );

  @override
  bool updateShouldNotify(
    _i3.InternetSettingsState? previous,
    _i3.InternetSettingsState? next,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#updateShouldNotify, [previous, next]),
            returnValue: false,
            returnValueForMissingStub: false,
          )
          as bool);
}
