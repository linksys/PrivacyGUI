// Mocks generated by Mockito 5.4.4 from annotations
// in privacy_gui/test/mocks/mockito_specs/wifi_advanced_settings_notifier_spec.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_riverpod/flutter_riverpod.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:privacy_gui/page/wifi_settings/_wifi_settings.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeNotifierProviderRef_0<T> extends _i1.SmartFake
    implements _i2.NotifierProviderRef<T> {
  _FakeNotifierProviderRef_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeWifiAdvancedSettingsState_1 extends _i1.SmartFake
    implements _i3.WifiAdvancedSettingsState {
  _FakeWifiAdvancedSettingsState_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [WifiAdvancedSettingsNotifier].
///
/// See the documentation for Mockito's code generation for more information.
class MockWifiAdvancedSettingsNotifier extends _i2.Notifier<_i3.WifiAdvancedSettingsState> with _i1.Mock
    implements _i3.WifiAdvancedSettingsNotifier {
  @override
  _i2.NotifierProviderRef<_i3.WifiAdvancedSettingsState> get ref =>
      (super.noSuchMethod(
        Invocation.getter(#ref),
        returnValue: _FakeNotifierProviderRef_0<_i3.WifiAdvancedSettingsState>(
          this,
          Invocation.getter(#ref),
        ),
        returnValueForMissingStub:
            _FakeNotifierProviderRef_0<_i3.WifiAdvancedSettingsState>(
          this,
          Invocation.getter(#ref),
        ),
      ) as _i2.NotifierProviderRef<_i3.WifiAdvancedSettingsState>);

  @override
  _i3.WifiAdvancedSettingsState get state => (super.noSuchMethod(
        Invocation.getter(#state),
        returnValue: _FakeWifiAdvancedSettingsState_1(
          this,
          Invocation.getter(#state),
        ),
        returnValueForMissingStub: _FakeWifiAdvancedSettingsState_1(
          this,
          Invocation.getter(#state),
        ),
      ) as _i3.WifiAdvancedSettingsState);

  @override
  set state(_i3.WifiAdvancedSettingsState? value) => super.noSuchMethod(
        Invocation.setter(
          #state,
          value,
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i3.WifiAdvancedSettingsState build() => (super.noSuchMethod(
        Invocation.method(
          #build,
          [],
        ),
        returnValue: _FakeWifiAdvancedSettingsState_1(
          this,
          Invocation.method(
            #build,
            [],
          ),
        ),
        returnValueForMissingStub: _FakeWifiAdvancedSettingsState_1(
          this,
          Invocation.method(
            #build,
            [],
          ),
        ),
      ) as _i3.WifiAdvancedSettingsState);

  @override
  _i4.Future<_i3.WifiAdvancedSettingsState> fetch([bool? force = false]) =>
      (super.noSuchMethod(
        Invocation.method(
          #fetch,
          [force],
        ),
        returnValue: _i4.Future<_i3.WifiAdvancedSettingsState>.value(
            _FakeWifiAdvancedSettingsState_1(
          this,
          Invocation.method(
            #fetch,
            [force],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i3.WifiAdvancedSettingsState>.value(
                _FakeWifiAdvancedSettingsState_1(
          this,
          Invocation.method(
            #fetch,
            [force],
          ),
        )),
      ) as _i4.Future<_i3.WifiAdvancedSettingsState>);

  @override
  _i4.Future<_i3.WifiAdvancedSettingsState> save() => (super.noSuchMethod(
        Invocation.method(
          #save,
          [],
        ),
        returnValue: _i4.Future<_i3.WifiAdvancedSettingsState>.value(
            _FakeWifiAdvancedSettingsState_1(
          this,
          Invocation.method(
            #save,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i3.WifiAdvancedSettingsState>.value(
                _FakeWifiAdvancedSettingsState_1(
          this,
          Invocation.method(
            #save,
            [],
          ),
        )),
      ) as _i4.Future<_i3.WifiAdvancedSettingsState>);

  @override
  void setClientSteeringEnabled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setClientSteeringEnabled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setNodesSteeringEnabled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setNodesSteeringEnabled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setIptvEnabled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setIptvEnabled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setDFSEnabled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setDFSEnabled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setMLOEnabled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setMLOEnabled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void setAirtimeFairnessEnabled(bool? value) => super.noSuchMethod(
        Invocation.method(
          #setAirtimeFairnessEnabled,
          [value],
        ),
        returnValueForMissingStub: null,
      );

  @override
  bool updateShouldNotify(
    _i3.WifiAdvancedSettingsState? previous,
    _i3.WifiAdvancedSettingsState? next,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateShouldNotify,
          [
            previous,
            next,
          ],
        ),
        returnValue: false,
        returnValueForMissingStub: false,
      ) as bool);
}
